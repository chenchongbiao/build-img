import { file_exist, dir_exist } from "std/fs"
import { echo_info } from "std/env"

import { create_rootfs_cache, create_rootfs_tar_file } from "../core/rootfs.ab"
import { run_command_in_chroot } from "../core/chroot.ab"
import { get_rootfs_path, get_tar_file_name, get_tar_file_path } from "../utils/file.ab"
import { create_image } from "../core/image.ab"

pub fun build_cmd(build_tag, distro_name, distro_version, components, arch, sources, base_type, device, image_size) {
    let rootfs_path = get_rootfs_path(distro_name, distro_version, arch, base_type)

    if not dir_exist(rootfs_path): create_rootfs_cache(distro_name, distro_version, components, arch, sources, base_type, device)
    else: echo_info("rootfs is exist")

    let tar_file_name = get_tar_file_name(distro_name, distro_version, arch, base_type)
    let tar_file_path = get_tar_file_path(tar_file_name)

    if not file_exist(tar_file_path) {
        echo_info("locale-gen")
        run_command_in_chroot(rootfs_path, "sed -i -E 's/#[[:space:]]?(zh_CN.UTF-8[[:space:]]+UTF-8)/\1/g' /etc/locale.gen")
        run_command_in_chroot(rootfs_path, "sed -i -E 's/#[[:space:]]?(en_US.UTF-8[[:space:]]+UTF-8)/\1/g' /etc/locale.gen`")
        run_command_in_chroot(rootfs_path, "locale-gen")
        run_command_in_chroot(rootfs_path, "DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales")
        echo_info("Annotation USERS_GID and USERS_GROUP")
        run_command_in_chroot(rootfs_path, "DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales")
        // 微软提供的 wsl 启动器会调用adduser,需要将 USERS_GID 和 USERS_GROUP 注释。
        run_command_in_chroot(rootfs_path, "sed -i -e 's/USERS_GID=100/#USERS_GID=100/' -e 's/USERS_GROUP=users/#USERS_GROUP=users/' /etc/adduser.conf")
        create_rootfs_tar_file(distro_name, distro_version, arch, base_type)
    } else {
        echo_info("{tar_file_name} is exist")
    }

    if build_tag == "board" {
        create_image(distro_name, distro_version, arch, base_type, device, image_size)
    }
}